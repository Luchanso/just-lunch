name: run

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - uses: actions-ecosystem/action-get-latest-tag@v1
        id: latest-tag
        with:
          semver_only: true

      - name: Login to Docker Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.REGISTRY_HOST }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ secrets.REGISTRY_HOST }}/${{ env.APP_NAME }}:${{ steps.latest-tag.outputs.tag }}
          cache-from: type=registry,ref=${{ secrets.REGISTRY_HOST }}/${{ env.APP_NAME }}:buildcache
          cache-to: type=registry,ref=${{ secrets.REGISTRY_HOST }}/${{ env.APP_NAME }}:buildcache,mode=max

  deploy:
    needs: [build]
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          name: id_ed25519
          known_hosts: ${{ secrets.SSH_KNOW_HOSTS }}

      - name: Create .env file
        run: |
          echo "${{ secrets.APP_ENV }}" >> .env

      - name: Copy docker-compose file and env to remote
        run: |
          rsync -chavzP --stats ./docker-compose.yml ${{ secrets.HOST_USERNAME }}@${{ secrets.HOST }}:~/${{ env.APP_NAME }}/app
          rsync -chavzP --stats ./static ${{ secrets.HOST_USERNAME }}@${{ secrets.HOST }}:~/${{ env.APP_NAME }}/app/static
          rsync -chavzP --stats ./.env ${{ secrets.HOST_USERNAME }}@${{ secrets.HOST }}:~/${{ env.APP_NAME }}/app

      - name: Restart application
        run: ssh ${{ secrets.HOST_USERNAME }}@${{ secrets.HOST }} 'cd ${{env.APP_NAME}}/app && docker-compose pull && docker-compose up -d'
